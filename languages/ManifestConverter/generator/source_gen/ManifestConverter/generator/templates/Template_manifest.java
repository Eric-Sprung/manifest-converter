package ManifestConverter.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.ApplySink;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.ArrayList;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.generator.runtime.MetaObjectContainer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.SNodePointer;

@Generated
public class Template_manifest extends TemplateDeclarationBase {

  public Template_manifest() {
    super(new MO());
  }

  public SNodeReference getTemplateNode() {
    return template_yk5zbu_a0a3;
  }

  @Override
  public void apply(TemplateContext context, ApplySink sink) throws GenerationException {
    final TemplateExecutionEnvironment environment = context.getEnvironment();
    final List<SNode> tlist1 = new ArrayList<SNode>();
    final Iterable<SNode> loopList1 = QueriesGenerated.sourceNodesQuery_1_0(new SourceSubstituteMacroNodesContext(context, loopMacroRef_yk5zbu_b0a0a2a5));
    for (SNode itnode1 : loopList1) {
      if (itnode1 == null) {
        continue;
      }
      TemplateContext context1 = context.subContext(itnode1);
      final SNode tnode2 = environment.createOutputNode(myConcepts[0]);
      {
        environment.nodeCopied(context1, tnode2, "tpl/r:6357e749-ef68-478f-98ea-f1b11fc9f288/7604103637184947011");
        tnode2.setProperty(myProperties[0], "manifest");
        tnode2.setProperty(myProperties[1], ".yaml");
        TemplateContext context2 = context1.subContext();
        {
          final SNode tnode3 = environment.createOutputNode(myConcepts[1]);
          {
            TemplateContext context3 = context2.subContext();
            {
              final SNode tnode4 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context4 = context3.subContext();
                {
                  final SNode tnode5 = environment.createOutputNode(myConcepts[3]);
                  tnode5.setProperty(myProperties[0], "---");
                  environment.aggregate(tnode4, myAggregationLinks[0], tnode5);
                }
                {
                  final SNode tnode6 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode4, myAggregationLinks[1], tnode6);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode4);
            }
            {
              final SNode tnode7 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context5 = context3.subContext();
                {
                  final SNode tnode8 = environment.createOutputNode(myConcepts[3]);
                  SNodeAccessUtil.setPropertyValue(tnode8, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_0(new PropertyMacroContext(context5, "apiVersion: ", propertyMacro_yk5zbu_c0a2a0a1a1a1a2a1a4a3a3a5)));
                  environment.aggregate(tnode7, myAggregationLinks[0], tnode8);
                }
                {
                  final SNode tnode9 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode7, myAggregationLinks[1], tnode9);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode7);
            }
            {
              final SNode tnode10 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context6 = context3.subContext();
                {
                  final SNode tnode11 = environment.createOutputNode(myConcepts[3]);
                  SNodeAccessUtil.setPropertyValue(tnode11, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_1(new PropertyMacroContext(context6, "kind: ", propertyMacro_yk5zbu_c0a2a0a1a1a1a3a1a4a3a3a5)));
                  environment.aggregate(tnode10, myAggregationLinks[0], tnode11);
                }
                {
                  final SNode tnode12 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode10, myAggregationLinks[1], tnode12);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode10);
            }
            {
              final SNode tnode13 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context7 = context3.subContext();
                {
                  final SNode tnode14 = environment.createOutputNode(myConcepts[3]);
                  tnode14.setProperty(myProperties[0], "metadata:");
                  environment.aggregate(tnode13, myAggregationLinks[0], tnode14);
                }
                {
                  final SNode tnode15 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode13, myAggregationLinks[1], tnode15);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode13);
            }
            {
              final SNode tnode16 = environment.createOutputNode(myConcepts[5]);
              {
                tnode16.setProperty(myProperties[2], "  ");
                TemplateContext context8 = context3.subContext();
                {
                  final SNode tnode17 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context9 = context8.subContext();
                    {
                      final SNode tnode18 = environment.createOutputNode(myConcepts[3]);
                      SNodeAccessUtil.setPropertyValue(tnode18, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_2(new PropertyMacroContext(context9, "name:", propertyMacro_yk5zbu_c0a2a0a1a1a1a2a1a5a1a4a3a3a5)));
                      environment.aggregate(tnode17, myAggregationLinks[0], tnode18);
                    }
                    {
                      final SNode tnode19 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode17, myAggregationLinks[1], tnode19);
                    }
                  }
                  environment.aggregate(tnode16, myAggregationLinks[2], tnode17);
                }
                {
                  final SNode tnode20 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context10 = context8.subContext();
                    {
                      final SNode tnode21 = environment.createOutputNode(myConcepts[3]);
                      SNodeAccessUtil.setPropertyValue(tnode21, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_3(new PropertyMacroContext(context10, "namespace: ", propertyMacro_yk5zbu_c0a2a0a1a1a1a3a1a5a1a4a3a3a5)));
                      environment.aggregate(tnode20, myAggregationLinks[0], tnode21);
                    }
                    {
                      final SNode tnode22 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode20, myAggregationLinks[1], tnode22);
                    }
                  }
                  environment.aggregate(tnode16, myAggregationLinks[2], tnode20);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode16);
            }
            {
              final SNode tnode23 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context11 = context3.subContext();
                {
                  final SNode tnode24 = environment.createOutputNode(myConcepts[3]);
                  tnode24.setProperty(myProperties[0], "spec:");
                  environment.aggregate(tnode23, myAggregationLinks[0], tnode24);
                }
                {
                  final SNode tnode25 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode23, myAggregationLinks[1], tnode25);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode23);
            }
            {
              final SNode tnode26 = environment.createOutputNode(myConcepts[5]);
              {
                tnode26.setProperty(myProperties[2], "  ");
                TemplateContext context12 = context3.subContext();
                {
                  final SNode tnode27 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context13 = context12.subContext();
                    {
                      final SNode tnode28 = environment.createOutputNode(myConcepts[3]);
                      tnode28.setProperty(myProperties[0], "containers:");
                      environment.aggregate(tnode27, myAggregationLinks[0], tnode28);
                    }
                    {
                      final SNode tnode29 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode27, myAggregationLinks[1], tnode29);
                    }
                  }
                  environment.aggregate(tnode26, myAggregationLinks[2], tnode27);
                }
                {
                  final SNode tnode30 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context14 = context12.subContext();
                    {
                      final SNode tnode31 = environment.createOutputNode(myConcepts[3]);
                      tnode31.setProperty(myProperties[0], "- name: nginx");
                      environment.aggregate(tnode30, myAggregationLinks[0], tnode31);
                    }
                    {
                      final SNode tnode32 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode30, myAggregationLinks[1], tnode32);
                    }
                  }
                  environment.aggregate(tnode26, myAggregationLinks[2], tnode30);
                }
                {
                  final SNode tnode33 = environment.createOutputNode(myConcepts[5]);
                  {
                    tnode33.setProperty(myProperties[2], "  ");
                    TemplateContext context15 = context12.subContext();
                    {
                      final SNode tnode34 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context16 = context15.subContext();
                        {
                          final SNode tnode35 = environment.createOutputNode(myConcepts[3]);
                          tnode35.setProperty(myProperties[0], "image: nginx:1.14.2");
                          environment.aggregate(tnode34, myAggregationLinks[0], tnode35);
                        }
                        {
                          final SNode tnode36 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode34, myAggregationLinks[1], tnode36);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode34);
                    }
                    {
                      final SNode tnode37 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context17 = context15.subContext();
                        {
                          final SNode tnode38 = environment.createOutputNode(myConcepts[3]);
                          tnode38.setProperty(myProperties[0], "ports:");
                          environment.aggregate(tnode37, myAggregationLinks[0], tnode38);
                        }
                        {
                          final SNode tnode39 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode37, myAggregationLinks[1], tnode39);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode37);
                    }
                    {
                      final SNode tnode40 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context18 = context15.subContext();
                        {
                          final SNode tnode41 = environment.createOutputNode(myConcepts[3]);
                          tnode41.setProperty(myProperties[0], "- name: http");
                          environment.aggregate(tnode40, myAggregationLinks[0], tnode41);
                        }
                        {
                          final SNode tnode42 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode40, myAggregationLinks[1], tnode42);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode40);
                    }
                    {
                      final SNode tnode43 = environment.createOutputNode(myConcepts[5]);
                      {
                        tnode43.setProperty(myProperties[2], "  ");
                        TemplateContext context19 = context15.subContext();
                        {
                          final SNode tnode44 = environment.createOutputNode(myConcepts[2]);
                          {
                            TemplateContext context20 = context19.subContext();
                            {
                              final SNode tnode45 = environment.createOutputNode(myConcepts[3]);
                              tnode45.setProperty(myProperties[0], "containerPort: 80");
                              environment.aggregate(tnode44, myAggregationLinks[0], tnode45);
                            }
                            {
                              final SNode tnode46 = environment.createOutputNode(myConcepts[4]);
                              environment.aggregate(tnode44, myAggregationLinks[1], tnode46);
                            }
                          }
                          environment.aggregate(tnode43, myAggregationLinks[2], tnode44);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode43);
                    }
                    {
                      final SNode tnode47 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context21 = context15.subContext();
                        {
                          final SNode tnode48 = environment.createOutputNode(myConcepts[3]);
                          tnode48.setProperty(myProperties[0], "- name: https");
                          environment.aggregate(tnode47, myAggregationLinks[0], tnode48);
                        }
                        {
                          final SNode tnode49 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode47, myAggregationLinks[1], tnode49);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode47);
                    }
                    {
                      final SNode tnode50 = environment.createOutputNode(myConcepts[5]);
                      {
                        tnode50.setProperty(myProperties[2], "  ");
                        TemplateContext context22 = context15.subContext();
                        {
                          final SNode tnode51 = environment.createOutputNode(myConcepts[2]);
                          {
                            TemplateContext context23 = context22.subContext();
                            {
                              final SNode tnode52 = environment.createOutputNode(myConcepts[3]);
                              tnode52.setProperty(myProperties[0], "containerPort: 443");
                              environment.aggregate(tnode51, myAggregationLinks[0], tnode52);
                            }
                            {
                              final SNode tnode53 = environment.createOutputNode(myConcepts[4]);
                              environment.aggregate(tnode51, myAggregationLinks[1], tnode53);
                            }
                          }
                          environment.aggregate(tnode50, myAggregationLinks[2], tnode51);
                        }
                      }
                      environment.aggregate(tnode33, myAggregationLinks[2], tnode50);
                    }
                  }
                  environment.aggregate(tnode26, myAggregationLinks[2], tnode33);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode26);
            }
            {
              final SNode tnode54 = environment.createOutputNode(myConcepts[2]);
              {
                TemplateContext context24 = context3.subContext();
                {
                  final SNode tnode55 = environment.createOutputNode(myConcepts[3]);
                  tnode55.setProperty(myProperties[0], "...");
                  environment.aggregate(tnode54, myAggregationLinks[0], tnode55);
                }
                {
                  final SNode tnode56 = environment.createOutputNode(myConcepts[4]);
                  environment.aggregate(tnode54, myAggregationLinks[1], tnode56);
                }
              }
              environment.aggregate(tnode3, myAggregationLinks[2], tnode54);
            }
          }
          environment.aggregate(tnode2, myAggregationLinks[3], tnode3);
        }
      }
      tlist1.add(tnode2);
    }
    sink.add(null, tlist1);
  }

  /*package*/ static final class MO implements MetaObjectContainer {
    @Override
    public SConcept[] concepts() {
      SConcept[] rv = new SConcept[6];
      rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47e4L, "TextgenText");
      rv[1] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcaff41e5L, "VerticalLines");
      rv[2] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47efL, "Line");
      rv[3] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word");
      rv[4] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0x4687342eeccd2a3cL, "NewlineMarker");
      rv[5] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47e9L, "SpaceIndentedText");
      return rv;
    }

    @Override
    public SProperty[] properties() {
      SProperty[] rv = new SProperty[3];
      rv[0] = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
      rv[1] = MetaAdapterFactory.getProperty(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e4L, 0x4b0b5d65ba33c118L, "ext");
      rv[2] = MetaAdapterFactory.getProperty(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e9L, 0x48241aad8b2b218cL, "indent");
      return rv;
    }


    @Override
    public SContainmentLink[] aggregations() {
      SContainmentLink[] rv = new SContainmentLink[4];
      rv[0] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47efL, 0xfe48d5fcafd47f2L, "words");
      rv[1] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47efL, 0x4687342eecce49c3L, "newlineMarker");
      rv[2] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0x64208511ac2f6788L, 0x64208511ac2f6798L, "lines");
      rv[3] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e4L, 0xfe48d5fcaff82faL, "content");
      return rv;
    }
  }
  private static final SNodePointer template_yk5zbu_a0a3 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637184947011");
  private static final SNodePointer loopMacroRef_yk5zbu_b0a0a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637185061411");
  private static final SNodePointer propertyMacro_yk5zbu_c0a2a0a1a1a1a2a1a4a3a3a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637184999051");
  private static final SNodePointer propertyMacro_yk5zbu_c0a2a0a1a1a1a3a1a4a3a3a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637185101792");
  private static final SNodePointer propertyMacro_yk5zbu_c0a2a0a1a1a1a2a1a5a1a4a3a3a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637185199048");
  private static final SNodePointer propertyMacro_yk5zbu_c0a2a0a1a1a1a3a1a5a1a4a3a3a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637185208855");
}
