package ManifestConverter.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.MapConfigBase;
import jetbrains.mps.generator.runtime.TemplateMappingConfiguration;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateRootMappingRule;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateModel;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.generator.runtime.MapRootRuleBase;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.MetaObjectContainer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

@Generated
public class Mapping_main extends MapConfigBase implements TemplateMappingConfiguration {
  private final Collection<TemplateRootMappingRule> rootRules;
  public Mapping_main(@NotNull TemplateModel model) {
    super(new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "5176375271270819327"), "main", model, false, new MO());
    rootRules = TemplateUtil.<TemplateRootMappingRule>asCollection(new RootMappingRule0());
  }
  @Override
  public Collection<TemplateRootMappingRule> getRootRules() {
    return rootRules;
  }
  /*package*/ final class RootMappingRule0 extends MapRootRuleBase implements TemplateRootMappingRule {
    public RootMappingRule0() {
      super(new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "5176375271270829079"), CONCEPTS.Specification$j4, true, false);
    }
    @Override
    public Collection<SNode> apply(@NotNull final TemplateContext context) throws GenerationException {
      final TemplateExecutionEnvironment environment = context.getEnvironment();
      Collection<SNode> result = environment.callSite(new Template_map_Specification(), new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "5176375271270829079")).apply(context);
      return result;
    }
  }

  /*package*/ static final class MO implements MetaObjectContainer {



  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Specification$j4 = MetaAdapterFactory.getConcept(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de234337383L, "ManifestConverter.structure.Specification");
  }
}
