package ManifestConverter.generator.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.ApplySink;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.generator.runtime.MetaObjectContainer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.SNodePointer;

@Generated
public class Template_manifests extends TemplateDeclarationBase {

  public Template_manifests() {
    super(new MO());
  }

  public SNodeReference getTemplateNode() {
    return template_5wgllr_a0a3;
  }

  @Override
  public void apply(TemplateContext context, ApplySink sink) throws GenerationException {
    final TemplateExecutionEnvironment environment = context.getEnvironment();
    final SNode tnode1 = environment.createOutputNode(myConcepts[0]);
    {
      environment.nodeCopied(context, tnode1, "tpl/r:6357e749-ef68-478f-98ea-f1b11fc9f288/7604103637184947011");
      tnode1.setProperty(myProperties[0], "manifests");
      tnode1.setProperty(myProperties[1], ".yaml");
      tnode1.setProperty(myProperties[2], "71qbzSbCuX5/LF");
      TemplateContext context1 = context.subContext();
      {
        final SNode tnode2 = environment.createOutputNode(myConcepts[1]);
        {
          TemplateContext context2 = context1.subContext();
          {
            final List<SNode> tlist3 = new ArrayList<SNode>();
            final Iterable<SNode> loopList3 = QueriesGenerated.sourceNodesQuery_1_2(new SourceSubstituteMacroNodesContext(context2, loopMacroRef_5wgllr_b0a0a1a1a1a5a2a5));
            for (SNode itnode3 : loopList3) {
              if (itnode3 == null) {
                continue;
              }
              TemplateContext context3 = context2.subContext(itnode3);
              final SNode tnode4 = environment.createOutputNode(myConcepts[1]);
              {
                TemplateContext context4 = context3.subContext();
                {
                  final SNode tnode5 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context5 = context4.subContext();
                    {
                      final SNode tnode6 = environment.createOutputNode(myConcepts[3]);
                      tnode6.setProperty(myProperties[0], "---");
                      environment.aggregate(tnode5, myAggregationLinks[0], tnode6);
                    }
                    {
                      final SNode tnode7 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode5, myAggregationLinks[1], tnode7);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode5);
                }
                {
                  final SNode tnode8 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context6 = context4.subContext();
                    {
                      final SNode tnode9 = environment.createOutputNode(myConcepts[3]);
                      tnode9.setProperty(myProperties[0], "apiVersion: ");
                      environment.aggregate(tnode8, myAggregationLinks[0], tnode9);
                    }
                    {
                      final SNode tnode10 = environment.createOutputNode(myConcepts[3]);
                      SNodeAccessUtil.setPropertyValue(tnode10, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_0(new PropertyMacroContext(context6, "default_api_version", propertyMacro_5wgllr_c0a2a0a1a2a1a2a3a2a1a1a5a2a5)));
                      environment.aggregate(tnode8, myAggregationLinks[0], tnode10);
                    }
                    {
                      final SNode tnode11 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode8, myAggregationLinks[1], tnode11);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode8);
                }
                {
                  final SNode tnode12 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context7 = context4.subContext();
                    {
                      final SNode tnode13 = environment.createOutputNode(myConcepts[3]);
                      tnode13.setProperty(myProperties[0], "kind: ");
                      environment.aggregate(tnode12, myAggregationLinks[0], tnode13);
                    }
                    {
                      final SNode tnode14 = environment.createOutputNode(myConcepts[3]);
                      SNodeAccessUtil.setPropertyValue(tnode14, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_1(new PropertyMacroContext(context7, "default_kind", propertyMacro_5wgllr_c0a2a0a1a2a1a3a3a2a1a1a5a2a5)));
                      environment.aggregate(tnode12, myAggregationLinks[0], tnode14);
                    }
                    {
                      final SNode tnode15 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode12, myAggregationLinks[1], tnode15);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode12);
                }
                {
                  final SNode tnode16 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context8 = context4.subContext();
                    {
                      final SNode tnode17 = environment.createOutputNode(myConcepts[3]);
                      tnode17.setProperty(myProperties[0], "metadata:");
                      environment.aggregate(tnode16, myAggregationLinks[0], tnode17);
                    }
                    {
                      final SNode tnode18 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode16, myAggregationLinks[1], tnode18);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode16);
                }
                {
                  final SNode tnode19 = environment.createOutputNode(myConcepts[5]);
                  {
                    tnode19.setProperty(myProperties[3], "  ");
                    TemplateContext context9 = context4.subContext();
                    {
                      final SNode tnode20 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context10 = context9.subContext();
                        {
                          final SNode tnode21 = environment.createOutputNode(myConcepts[3]);
                          tnode21.setProperty(myProperties[0], "name: ");
                          environment.aggregate(tnode20, myAggregationLinks[0], tnode21);
                        }
                        {
                          final SNode tnode22 = environment.createOutputNode(myConcepts[3]);
                          SNodeAccessUtil.setPropertyValue(tnode22, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_2(new PropertyMacroContext(context10, "default_name", propertyMacro_5wgllr_c0a2a0a1a2a1a2a1a5a3a2a1a1a5a2a5)));
                          environment.aggregate(tnode20, myAggregationLinks[0], tnode22);
                        }
                        {
                          final SNode tnode23 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode20, myAggregationLinks[1], tnode23);
                        }
                      }
                      environment.aggregate(tnode19, myAggregationLinks[2], tnode20);
                    }
                    {
                      final SNode tnode24 = environment.createOutputNode(myConcepts[2]);
                      {
                        TemplateContext context11 = context9.subContext();
                        {
                          final SNode tnode25 = environment.createOutputNode(myConcepts[3]);
                          tnode25.setProperty(myProperties[0], "namespace: ");
                          environment.aggregate(tnode24, myAggregationLinks[0], tnode25);
                        }
                        {
                          final SNode tnode26 = environment.createOutputNode(myConcepts[3]);
                          SNodeAccessUtil.setPropertyValue(tnode26, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_3(new PropertyMacroContext(context11, "default_namespace", propertyMacro_5wgllr_c0a2a0a1a2a1a3a1a5a3a2a1a1a5a2a5)));
                          environment.aggregate(tnode24, myAggregationLinks[0], tnode26);
                        }
                        {
                          final SNode tnode27 = environment.createOutputNode(myConcepts[4]);
                          environment.aggregate(tnode24, myAggregationLinks[1], tnode27);
                        }
                      }
                      environment.aggregate(tnode19, myAggregationLinks[2], tnode24);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode19);
                }
                {
                  final SNode tnode28 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context12 = context4.subContext();
                    {
                      final SNode tnode29 = environment.createOutputNode(myConcepts[3]);
                      tnode29.setProperty(myProperties[0], "spec:");
                      environment.aggregate(tnode28, myAggregationLinks[0], tnode29);
                    }
                    {
                      final SNode tnode30 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode28, myAggregationLinks[1], tnode30);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode28);
                }
                {
                  final SNode tnode31 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context13 = context4.subContext();
                    {
                      final SNode tnode32 = environment.createOutputNode(myConcepts[5]);
                      {
                        tnode32.setProperty(myProperties[3], "  ");
                        TemplateContext context14 = context13.subContext();
                        {
                          final SNode tnode33 = environment.createOutputNode(myConcepts[2]);
                          {
                            TemplateContext context15 = context14.subContext();
                            {
                              final SNode tnode34 = environment.createOutputNode(myConcepts[4]);
                              environment.aggregate(tnode33, myAggregationLinks[1], tnode34);
                            }
                            {
                              final SNode tnode35 = environment.createOutputNode(myConcepts[3]);
                              tnode35.setProperty(myProperties[0], "containers:");
                              environment.aggregate(tnode33, myAggregationLinks[0], tnode35);
                            }
                          }
                          environment.aggregate(tnode32, myAggregationLinks[2], tnode33);
                        }
                        {
                          final List<SNode> tlist36 = new ArrayList<SNode>();
                          final Iterable<SNode> loopList36 = QueriesGenerated.sourceNodesQuery_1_1(new SourceSubstituteMacroNodesContext(context14, loopMacroRef_5wgllr_b0a0a1a3a1a1a1a7a3a2a1a1a5a2a5));
                          for (SNode itnode36 : loopList36) {
                            if (itnode36 == null) {
                              continue;
                            }
                            TemplateContext context16 = context14.subContext(itnode36);
                            final SNode tnode37 = environment.createOutputNode(myConcepts[1]);
                            {
                              TemplateContext context17 = context16.subContext();
                              {
                                final SNode tnode38 = environment.createOutputNode(myConcepts[2]);
                                {
                                  TemplateContext context18 = context17.subContext();
                                  {
                                    final SNode tnode39 = environment.createOutputNode(myConcepts[3]);
                                    tnode39.setProperty(myProperties[0], "- ");
                                    environment.aggregate(tnode38, myAggregationLinks[0], tnode39);
                                  }
                                  {
                                    final SNode tnode40 = environment.createOutputNode(myConcepts[3]);
                                    tnode40.setProperty(myProperties[0], "name: ");
                                    environment.aggregate(tnode38, myAggregationLinks[0], tnode40);
                                  }
                                  {
                                    final SNode tnode41 = environment.createOutputNode(myConcepts[3]);
                                    SNodeAccessUtil.setPropertyValue(tnode41, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_4(new PropertyMacroContext(context18, "default_container_name", propertyMacro_5wgllr_c0a2a0a1a3a1a1a3a2a3a1a1a1a7a3a2a1a1a5a2a5)));
                                    environment.aggregate(tnode38, myAggregationLinks[0], tnode41);
                                  }
                                  {
                                    final SNode tnode42 = environment.createOutputNode(myConcepts[4]);
                                    environment.aggregate(tnode38, myAggregationLinks[1], tnode42);
                                  }
                                }
                                environment.aggregate(tnode37, myAggregationLinks[2], tnode38);
                              }
                              {
                                final SNode tnode43 = environment.createOutputNode(myConcepts[2]);
                                {
                                  TemplateContext context19 = context17.subContext();
                                  {
                                    final SNode tnode44 = environment.createOutputNode(myConcepts[4]);
                                    environment.aggregate(tnode43, myAggregationLinks[1], tnode44);
                                  }
                                  {
                                    final SNode tnode45 = environment.createOutputNode(myConcepts[3]);
                                    tnode45.setProperty(myProperties[0], "  ");
                                    environment.aggregate(tnode43, myAggregationLinks[0], tnode45);
                                  }
                                  {
                                    final SNode tnode46 = environment.createOutputNode(myConcepts[3]);
                                    tnode46.setProperty(myProperties[0], "image: ");
                                    environment.aggregate(tnode43, myAggregationLinks[0], tnode46);
                                  }
                                  {
                                    final SNode tnode47 = environment.createOutputNode(myConcepts[3]);
                                    SNodeAccessUtil.setPropertyValue(tnode47, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_5(new PropertyMacroContext(context19, "default_container_image", propertyMacro_5wgllr_c0a2a0a1a4a1a2a3a2a3a1a1a1a7a3a2a1a1a5a2a5)));
                                    environment.aggregate(tnode43, myAggregationLinks[0], tnode47);
                                  }
                                }
                                environment.aggregate(tnode37, myAggregationLinks[2], tnode43);
                              }
                              {
                                final SNode tnode48 = environment.createOutputNode(myConcepts[2]);
                                {
                                  TemplateContext context20 = context17.subContext();
                                  {
                                    final SNode tnode49 = environment.createOutputNode(myConcepts[3]);
                                    tnode49.setProperty(myProperties[0], "  ");
                                    environment.aggregate(tnode48, myAggregationLinks[0], tnode49);
                                  }
                                  {
                                    final SNode tnode50 = environment.createOutputNode(myConcepts[3]);
                                    tnode50.setProperty(myProperties[0], "ports: ");
                                    environment.aggregate(tnode48, myAggregationLinks[0], tnode50);
                                  }
                                  {
                                    final SNode tnode51 = environment.createOutputNode(myConcepts[4]);
                                    environment.aggregate(tnode48, myAggregationLinks[1], tnode51);
                                  }
                                }
                                environment.aggregate(tnode37, myAggregationLinks[2], tnode48);
                              }
                              {
                                final SNode tnode52 = environment.createOutputNode(myConcepts[2]);
                                {
                                  TemplateContext context21 = context17.subContext();
                                  {
                                    final SNode tnode53 = environment.createOutputNode(myConcepts[5]);
                                    {
                                      tnode53.setProperty(myProperties[3], "  ");
                                      TemplateContext context22 = context21.subContext();
                                      {
                                        final List<SNode> tlist54 = new ArrayList<SNode>();
                                        final Iterable<SNode> loopList54 = QueriesGenerated.sourceNodesQuery_1_0(new SourceSubstituteMacroNodesContext(context22, loopMacroRef_5wgllr_b0a0a1a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5));
                                        for (SNode itnode54 : loopList54) {
                                          if (itnode54 == null) {
                                            continue;
                                          }
                                          TemplateContext context23 = context22.subContext(itnode54);
                                          final SNode tnode55 = environment.createOutputNode(myConcepts[1]);
                                          {
                                            TemplateContext context24 = context23.subContext();
                                            {
                                              final SNode tnode56 = environment.createOutputNode(myConcepts[2]);
                                              {
                                                TemplateContext context25 = context24.subContext();
                                                {
                                                  final SNode tnode57 = environment.createOutputNode(myConcepts[3]);
                                                  tnode57.setProperty(myProperties[0], "- ");
                                                  environment.aggregate(tnode56, myAggregationLinks[0], tnode57);
                                                }
                                                {
                                                  final SNode tnode58 = environment.createOutputNode(myConcepts[3]);
                                                  tnode58.setProperty(myProperties[0], "name: ");
                                                  environment.aggregate(tnode56, myAggregationLinks[0], tnode58);
                                                }
                                                {
                                                  final SNode tnode59 = environment.createOutputNode(myConcepts[3]);
                                                  SNodeAccessUtil.setPropertyValue(tnode59, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_6(new PropertyMacroContext(context25, "default_container_port_name", propertyMacro_5wgllr_c0a2a0a1a3a1a1a3a2a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5)));
                                                  environment.aggregate(tnode56, myAggregationLinks[0], tnode59);
                                                }
                                                {
                                                  final SNode tnode60 = environment.createOutputNode(myConcepts[4]);
                                                  environment.aggregate(tnode56, myAggregationLinks[1], tnode60);
                                                }
                                              }
                                              environment.aggregate(tnode55, myAggregationLinks[2], tnode56);
                                            }
                                            {
                                              final SNode tnode61 = environment.createOutputNode(myConcepts[2]);
                                              {
                                                TemplateContext context26 = context24.subContext();
                                                {
                                                  final SNode tnode62 = environment.createOutputNode(myConcepts[4]);
                                                  environment.aggregate(tnode61, myAggregationLinks[1], tnode62);
                                                }
                                                {
                                                  final SNode tnode63 = environment.createOutputNode(myConcepts[3]);
                                                  tnode63.setProperty(myProperties[0], "  ");
                                                  environment.aggregate(tnode61, myAggregationLinks[0], tnode63);
                                                }
                                                {
                                                  final SNode tnode64 = environment.createOutputNode(myConcepts[3]);
                                                  tnode64.setProperty(myProperties[0], "containerPort: ");
                                                  environment.aggregate(tnode61, myAggregationLinks[0], tnode64);
                                                }
                                                {
                                                  final SNode tnode65 = environment.createOutputNode(myConcepts[3]);
                                                  SNodeAccessUtil.setPropertyValue(tnode65, myProperties[0], QueriesGenerated.propertyMacro_GetValue_1_7(new PropertyMacroContext(context26, "default_container_port_number", propertyMacro_5wgllr_c0a2a0a1a4a1a2a3a2a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5)));
                                                  environment.aggregate(tnode61, myAggregationLinks[0], tnode65);
                                                }
                                              }
                                              environment.aggregate(tnode55, myAggregationLinks[2], tnode61);
                                            }
                                          }
                                          tlist54.add(tnode55);
                                        }
                                        environment.aggregate(tnode53, myAggregationLinks[2], tlist54);
                                      }
                                    }
                                    environment.aggregate(tnode52, myAggregationLinks[0], tnode53);
                                  }
                                  {
                                    final SNode tnode66 = environment.createOutputNode(myConcepts[4]);
                                    environment.aggregate(tnode52, myAggregationLinks[1], tnode66);
                                  }
                                }
                                environment.aggregate(tnode37, myAggregationLinks[2], tnode52);
                              }
                            }
                            tlist36.add(tnode37);
                          }
                          environment.aggregate(tnode32, myAggregationLinks[2], tlist36);
                        }
                      }
                      environment.aggregate(tnode31, myAggregationLinks[0], tnode32);
                    }
                    {
                      final SNode tnode67 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode31, myAggregationLinks[1], tnode67);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode31);
                }
                {
                  final SNode tnode68 = environment.createOutputNode(myConcepts[2]);
                  {
                    TemplateContext context27 = context4.subContext();
                    {
                      final SNode tnode69 = environment.createOutputNode(myConcepts[3]);
                      tnode69.setProperty(myProperties[0], "...");
                      environment.aggregate(tnode68, myAggregationLinks[0], tnode69);
                    }
                    {
                      final SNode tnode70 = environment.createOutputNode(myConcepts[4]);
                      environment.aggregate(tnode68, myAggregationLinks[1], tnode70);
                    }
                  }
                  environment.aggregate(tnode4, myAggregationLinks[2], tnode68);
                }
              }
              tlist3.add(tnode4);
            }
            environment.aggregate(tnode2, myAggregationLinks[2], tlist3);
          }
        }
        environment.aggregate(tnode1, myAggregationLinks[3], tnode2);
      }
    }
    sink.add(null, TemplateUtil.singletonList(tnode1));
  }

  /*package*/ static final class MO implements MetaObjectContainer {
    @Override
    public SConcept[] concepts() {
      SConcept[] rv = new SConcept[6];
      rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47e4L, "TextgenText");
      rv[1] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcaff41e5L, "VerticalLines");
      rv[2] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47efL, "Line");
      rv[3] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47f4L, "word");
      rv[4] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0x4687342eeccd2a3cL, "NewlineMarker");
      rv[5] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, "com.dslfoundry.plaintextgen"), 0xfe48d5fcafd47e9L, "SpaceIndentedText");
      return rv;
    }

    @Override
    public SProperty[] properties() {
      SProperty[] rv = new SProperty[4];
      rv[0] = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
      rv[1] = MetaAdapterFactory.getProperty(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e4L, 0x4b0b5d65ba33c118L, "ext");
      rv[2] = MetaAdapterFactory.getProperty(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e4L, 0x705a2e3e0ba1ef4cL, "lineEnding");
      rv[3] = MetaAdapterFactory.getProperty(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e9L, 0x48241aad8b2b218cL, "indent");
      return rv;
    }


    @Override
    public SContainmentLink[] aggregations() {
      SContainmentLink[] rv = new SContainmentLink[4];
      rv[0] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47efL, 0xfe48d5fcafd47f2L, "words");
      rv[1] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47efL, 0x4687342eecce49c3L, "newlineMarker");
      rv[2] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0x64208511ac2f6788L, 0x64208511ac2f6798L, "lines");
      rv[3] = MetaAdapterFactory.getContainmentLink(0x990507d335274c54L, 0xbfe90ca3c9c6247aL, 0xfe48d5fcafd47e4L, 0xfe48d5fcaff82faL, "content");
      return rv;
    }
  }
  private static final SNodePointer template_5wgllr_a0a3 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "7604103637184947011");
  private static final SNodePointer loopMacroRef_5wgllr_b0a0a1a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255390394");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a2a1a2a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255391287");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a2a1a3a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255403364");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a2a1a2a1a5a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255417596");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a2a1a3a1a5a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255423490");
  private static final SNodePointer loopMacroRef_5wgllr_b0a0a1a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255690126");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a3a1a1a3a2a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255771300");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a4a1a2a3a2a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255796704");
  private static final SNodePointer loopMacroRef_5wgllr_b0a0a1a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255984331");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a3a1a1a3a2a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255982287");
  private static final SNodePointer propertyMacro_5wgllr_c0a2a0a1a4a1a2a3a2a2a1a1a1a4a3a2a3a1a1a1a7a3a2a1a1a5a2a5 = new SNodePointer("r:6357e749-ef68-478f-98ea-f1b11fc9f288(ManifestConverter.generator.templates@generator)", "4473130635255982300");
}
