package K8sManifests.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class Specification_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.manifests$UVQc)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode manifest) {
        tgs.append("---");
        tgs.newLine();
        tgs.append("apiVersion: ");
        tgs.append("placeholder");
        tgs.newLine();
        tgs.append("kind: ");
        tgs.append("placehodler");
        tgs.newLine();
        tgs.append("metadata:");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("name: ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(manifest, LINKS.metadata$FS4A), PROPS.name$TRQG));
        tgs.newLine();
        tgs.indent();
        tgs.append("namespace: ");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(manifest, LINKS.metadata$FS4A), PROPS.namespace$qveQ));
        tgs.newLine();
        ctx.getBuffer().area().decreaseIndent();
        tgs.append("spec:");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("containers:");
        tgs.newLine();
        ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(manifest, LINKS.specification$h5dq), LINKS.containers$$Dnp)).visitAll(new IVisitor<SNode>() {
          public void visit(SNode container) {
            tgs.indent();
            tgs.append("- name: ");
            tgs.append(SPropertyOperations.getString(container, PROPS.name$ZzVc));
            tgs.newLine();
            tgs.indent();
            tgs.append("  image: ");
            tgs.append(SPropertyOperations.getString(container, PROPS.image$ZE1A));
            tgs.newLine();
            tgs.indent();
            tgs.append("  ports:");
            tgs.newLine();
            ListSequence.fromList(SLinkOperations.getChildren(container, LINKS.ports$ZFrG)).visitAll(new IVisitor<SNode>() {
              public void visit(SNode port) {
                ctx.getBuffer().area().increaseIndent();
                tgs.indent();
                tgs.append("- name: ");
                tgs.append(SPropertyOperations.getString(port, PROPS.name$CW_1));
                tgs.newLine();
                tgs.indent();
                tgs.append("  containerPort: ");
                tgs.append(String.valueOf(SPropertyOperations.getInteger(port, PROPS.containerPort$ZGpG)));
                tgs.newLine();
                ctx.getBuffer().area().decreaseIndent();
              }
            });
          }
        });
        ctx.getBuffer().area().decreaseIndent();
        tgs.append("...");
        tgs.newLine();
      }
    });
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink manifests$UVQc = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de234337383L, 0x47d62de234337384L, "manifests");
    /*package*/ static final SContainmentLink metadata$FS4A = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de234364c8aL, 0x47d62de234364c90L, "metadata");
    /*package*/ static final SContainmentLink specification$h5dq = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de234364c8aL, 0x698733f841af8ae0L, "specification");
    /*package*/ static final SContainmentLink containers$$Dnp = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x59e2bd7dbb117258L, 0x47d62de23439e8e9L, "containers");
    /*package*/ static final SContainmentLink ports$ZFrG = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de23439e2e4L, 0x47d62de23439e2f0L, "ports");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$TRQG = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x59e2bd7dbb117259L, 0x59e2bd7dbb11725aL, "name");
    /*package*/ static final SProperty namespace$qveQ = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x59e2bd7dbb117259L, 0x59e2bd7dbb135806L, "namespace");
    /*package*/ static final SProperty name$ZzVc = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de23439e2e4L, 0x47d62de23439e2e5L, "name");
    /*package*/ static final SProperty image$ZE1A = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de23439e2e4L, 0x47d62de23439e2eaL, "image");
    /*package*/ static final SProperty name$CW_1 = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de23439e2f2L, 0x47d62de2343c8ed7L, "name");
    /*package*/ static final SProperty containerPort$ZGpG = MetaAdapterFactory.getProperty(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de23439e2f2L, 0x47d62de23439e2f3L, "containerPort");
  }
}
