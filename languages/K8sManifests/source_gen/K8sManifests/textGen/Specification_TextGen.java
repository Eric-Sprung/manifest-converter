package K8sManifests.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Specification_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.manifests$UVQc)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode manifest) {
        tgs.appendNode(manifest);
      }
    });
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink manifests$UVQc = MetaAdapterFactory.getContainmentLink(0xdd310849d074035L, 0x939dcb69bd123423L, 0x47d62de234337383L, 0x47d62de234337384L, "manifests");
  }
}
